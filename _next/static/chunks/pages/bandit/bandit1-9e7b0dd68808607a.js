(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[332],{88284:function(e,s,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/bandit/bandit1",function(){return t(11003)}])},69242:function(e,s,t){"use strict";var n=t(85893),i=t(41664),a=t(98574),o=t.n(a);s.Z=function(e){var s=e.link1,t=e.link2;return(0,n.jsxs)("div",{className:o().pageNav,children:[(0,n.jsx)("div",{children:s?(0,n.jsx)(i.default,{href:s,children:(0,n.jsx)("a",{title:"Previous page",className:o().navButton,children:"\u25c0"})}):""}),(0,n.jsx)("div",{children:t?(0,n.jsx)(i.default,{href:t,children:(0,n.jsx)("a",{title:"Next page",className:o().navButton,children:"\u25b6"})}):""})]})}},20586:function(e,s,t){"use strict";var n=t(85893),i=t(86655),a=t.n(i),o=t(5227),l=t(84283),c=t(67294);s.Z=function(e){var s=e.children,t=(0,c.useState)(!1),i=t[0],r=t[1];return(0,n.jsxs)("section",{children:[(0,n.jsx)("h2",{children:"Key"}),(0,n.jsxs)("div",{className:a().codeBlock,children:[(0,n.jsx)("div",{className:a().spoilerToggler,children:(0,n.jsx)("button",{onClick:function(){return r(!i)},children:"Click to Reveal"})}),(0,n.jsx)("div",{className:a().spoilerContainer,children:(0,n.jsx)("div",{className:"".concat(a().spoiler," ").concat(i?a().show:""),children:(0,n.jsx)(o.Z,{language:"",style:l.cL,customStyle:{margin:0},children:s})})})]})]})}},11003:function(e,s,t){"use strict";t.r(s);var n=t(85893),i=t(69242),a=t(20586);s.default=function(){return(0,n.jsxs)("div",{children:[(0,n.jsx)("h1",{children:"Bandit 1"}),(0,n.jsxs)("section",{children:[(0,n.jsx)("h2",{children:"Experience"}),(0,n.jsxs)("p",{children:["So, as a common first step for these challenges, I used ",(0,n.jsx)("code",{children:"ls"}),'to just see what files exist. Interestingly, this time we have a file with a dash ("-") for a name. I thought it was obvious that the password must be there, so I attempted to use the ',(0,n.jsx)("code",{children:"cat"})," command. But, it ended up echoing back whatever I type in subsequently. I found out that dash is often used as convention for stdin/stdout."]}),(0,n.jsxs)("p",{children:["After searching, a ",(0,n.jsx)("a",{href:"https://unix.stackexchange.com/questions/16357/usage-of-dash-in-place-of-a-filename",children:"StackExchange answer"})," then taught me, that we simply had to write a fuller path to distinguish it, like so ",(0,n.jsx)("code",{children:"cat ./-"}),"."]})]}),(0,n.jsxs)("section",{children:[(0,n.jsx)("h2",{children:"Reflection"}),(0,n.jsx)("p",{children:"Not much to say, this level was really about syntax, I learnt that dash could be a special character which stands for stdin. But I supposed, it's really more about introducing that some functions may have special arguments and also how users could potentially escape these sepcial meaningss. This could potentially be useful."})]}),(0,n.jsx)(a.Z,{children:"CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9"}),(0,n.jsx)(i.Z,{link1:"/bandit/bandit0",link2:"/bandit/bandit2"})]})}},98574:function(e){e.exports={pageNav:"PageNav_pageNav__NXqbT",navButton:"PageNav_navButton__yHhmO"}},86655:function(e){e.exports={codeBlock:"SpoilerKey_codeBlock__KWl0d",spoilerToggler:"SpoilerKey_spoilerToggler__HCeWZ",spoiler:"SpoilerKey_spoiler__YWx_s",show:"SpoilerKey_show__VIJ75",spoilerContainer:"SpoilerKey_spoilerContainer__O76It"}}},function(e){e.O(0,[369,774,888,179],(function(){return s=88284,e(e.s=s);var s}));var s=e.O();_N_E=s}]);