(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[82],{99414:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/natas/natas11",function(){return n(59534)}])},34655:function(e,t,n){"use strict";var o=n(85893),a=n(40335),s=n.n(a);t.Z=function(e){var t=e.src,n=e.alt,a=e.width,i=void 0===a?600:a;return(0,o.jsx)("div",{className:s().imgContainer,children:(0,o.jsx)("img",{src:"/over-the-wire"+t,alt:n,width:i})})}},90654:function(e,t,n){"use strict";var o=n(85893),a=n(23457),s=n.n(a),i=n(5227),r=n(84283);t.Z=function(e){var t=e.children,n=e.language;return(0,o.jsx)("div",{className:s().CodeBlock,children:(0,o.jsx)(i.Z,{language:n,style:r.cL,children:t})})}},69242:function(e,t,n){"use strict";var o=n(85893),a=n(41664),s=n(98574),i=n.n(s);t.Z=function(e){var t=e.link1,n=e.link2;return(0,o.jsxs)("div",{className:i().pageNav,children:[(0,o.jsx)("div",{children:t?(0,o.jsx)(a.default,{href:t,children:(0,o.jsx)("a",{title:"Previous page",className:i().navButton,children:"\u25c0"})}):""}),(0,o.jsx)("div",{children:n?(0,o.jsx)(a.default,{href:n,children:(0,o.jsx)("a",{title:"Next page",className:i().navButton,children:"\u25b6"})}):""})]})}},20586:function(e,t,n){"use strict";var o=n(85893),a=n(86655),s=n.n(a),i=n(5227),r=n(84283),c=n(67294);t.Z=function(e){var t=e.children,n=(0,c.useState)(!1),a=n[0],l=n[1];return(0,o.jsxs)("section",{children:[(0,o.jsx)("h2",{children:"Key"}),(0,o.jsxs)("div",{className:s().codeBlock,children:[(0,o.jsx)("div",{className:s().spoilerToggler,children:(0,o.jsx)("button",{onClick:function(){return l(!a)},children:"Click to Reveal"})}),(0,o.jsx)("div",{className:s().spoilerContainer,children:(0,o.jsx)("div",{className:"".concat(s().spoiler," ").concat(a?s().show:""),children:(0,o.jsx)(i.Z,{language:"",style:r.cL,customStyle:{margin:0},children:t})})})]})]})}},59534:function(e,t,n){"use strict";n.r(t);var o=n(85893),a=n(34655),s=n(90654),i=n(69242),r=n(20586);t.default=function(){return(0,o.jsxs)("div",{children:[(0,o.jsx)("h1",{children:"Natas 11"}),(0,o.jsxs)("section",{children:[(0,o.jsx)("h2",{children:"Experience"}),(0,o.jsx)("p",{children:"Here we are greeted with something that is not obviously vulnerable. The input is merely to change a background color. However it does give us a hint to look into cookies. Looking at the source code, it uses the an encrypted cookie to determine whether the password should be shown or not. So first step was to get the cookie called data. This could be obtained from the Application tab of the developer tools, or simply using some Javascript."}),(0,o.jsx)(a.Z,{src:"/images/natas11-1.png",alt:"obtaining cookies",width:450}),(0,o.jsxs)("p",{children:["Then, we analyse what is being done in the source code. There are many function definitions in between, but for the first case, it basically create a ",(0,o.jsx)("code",{children:"defaultdata"})," variable, then load that then save the return. The ",(0,o.jsx)("code",{children:"saveData"})," function simply sets the cookie to the argument it's given. Another important thing to note is that it checks if the ",(0,o.jsx)("code",{children:"showpassword"})," key inside the cookie maps to a",(0,o.jsx)("code",{children:"yes"}),", if so, it will print a password. So our goal, is to modify the cookie. The main problem is that we do not have the function to encrypt the cookie into the valid form required."]}),(0,o.jsx)(s.Z,{language:"php",children:'$defaultdata = array( "showpassword"=>"no", "bgcolor"=>"#ffffff");\n$data = loadData($defaultdata);\nsaveData($data);\n\n<?\nif($data["showpassword"] == "yes") {\n    print "The password for natas12 is <censored><br>";\n}\n\n?>'}),(0,o.jsxs)("p",{children:["For now, we must examine the function ",(0,o.jsx)("code",{children:"loadData"})," and what it does."]}),(0,o.jsx)(s.Z,{language:"php",children:"function loadData($def) {\n    global $_COOKIE;\n    $mydata = $def;\n    if(array_key_exists(\"data\", $_COOKIE)) {\n    $tempdata = json_decode(xor_encrypt(base64_decode($_COOKIE[\"data\"])), true);\n    if(is_array($tempdata) && array_key_exists(\"showpassword\", $tempdata) && array_key_exists(\"bgcolor\", $tempdata)) {\n        if (preg_match('/^#(?:[a-fd]{6})$/i', $tempdata['bgcolor'])) {\n        $mydata['showpassword'] = $tempdata['showpassword'];\n        $mydata['bgcolor'] = $tempdata['bgcolor'];\n        }\n    }\n    }\n    return $mydata;\n}"}),(0,o.jsxs)("p",{children:[(0,o.jsx)("code",{children:"loadData"})," is a sizeable function, however, the main thing to consider is that it uses the ",(0,o.jsx)("code",{children:"xor_encrypt"})," function. So, what is an XOR encryption?"]}),(0,o.jsx)(s.Z,{language:"php",children:"function xor_encrypt($in) {\n    $key = '<censored>';\n    $text = $in;\n    $outText = '';\n\n    // Iterate through each character\n    for($i=0;$i<strlen($text);$i++) {\n    $outText .= $text[$i] ^ $key[$i % strlen($key)];\n    }\n\n    return $outText;\n}"}),(0,o.jsx)("p",{children:"Looking at the code, is simply performs exclusive or (XOR) on the text with some ssecret key. With background knowledge on XOR, we know that XOR is reversible."}),(0,o.jsx)(s.Z,{language:"",children:"10 XOR 11 --\x3e 01\n11 XOR 01 --\x3e 10\n--------------------\nin other words:\nA XOR B = C\nB XOR C = A"}),(0,o.jsx)("p",{children:"Now, we know the default and we also have access to the resulting cookie. All we are missing is the key. Using the principle of how XOR works, I XOR the default data and it's respective XOR cookie."}),(0,o.jsx)(a.Z,{src:"/images/natas11-2.png",alt:"Code used to get the key"}),(0,o.jsx)(a.Z,{src:"/images/natas11-3.png",alt:"Key used by xor encrypt"}),(0,o.jsxs)("p",{children:["From the code of the encryptiong function, we know that it simply repeats itself, this is another potential way of finding the key if it didn't have that reversible property. Therefore, the key is simply just ",(0,o.jsx)("code",{children:"qw8J"}),". We may then fill in the key inside the encryption function then create our own cookie where the"," ",(0,o.jsx)("code",{children:"showpassword"})," key has a value of ",(0,o.jsx)("code",{children:"yes"})]}),(0,o.jsx)(a.Z,{src:"/images/natas11-4.png",alt:""}),(0,o.jsx)(a.Z,{src:"/images/natas11-5.png",alt:""}),(0,o.jsx)(a.Z,{src:"/images/natas11-66.png",alt:""}),(0,o.jsx)("p",{children:"The last picture above shows the cookie, not the password for the next level. So then, we can set the cookie via the developer tools and reload the page to get the password."})]}),(0,o.jsxs)("section",{children:[(0,o.jsx)("h2",{children:"Reflection"}),(0,o.jsx)("p",{children:"I think this was an example of breaking an encryption only using the start and end result. If the encryption is not as simple, I could picture breaking it just by comparison, as you would be allowed to set the background colour to anything and analysed how it changed the cookie. This might be difficult, but it seem quite possible."}),(0,o.jsx)("p",{children:"In regards to perspective, it was quite shocking how even for a website that changes background colour, there are these potential loop holes that I would have never thought about as a developer of the website. Using cookies can definitely be quite vulnerable as seen in this case as they are changeable, so it's really about ensuring that the encryption is difficult to break."})]}),(0,o.jsx)(r.Z,{children:"EDXp0pS26wLKHZy1rDBPUZk0RKfLGIR3"}),(0,o.jsx)(i.Z,{link1:"natas10",link2:"natas12"})]})}},40335:function(e){e.exports={imgContainer:"BlogImage_imgContainer__s2tL6"}},23457:function(e){e.exports={CodeBlock:"CodeBlock_CodeBlock___IBBd"}},98574:function(e){e.exports={pageNav:"PageNav_pageNav__NXqbT",navButton:"PageNav_navButton__yHhmO"}},86655:function(e){e.exports={codeBlock:"SpoilerKey_codeBlock__KWl0d",spoilerToggler:"SpoilerKey_spoilerToggler__HCeWZ",spoiler:"SpoilerKey_spoiler__YWx_s",show:"SpoilerKey_show__VIJ75",spoilerContainer:"SpoilerKey_spoilerContainer__O76It"}}},function(e){e.O(0,[369,774,888,179],(function(){return t=99414,e(e.s=t);var t}));var t=e.O();_N_E=t}]);