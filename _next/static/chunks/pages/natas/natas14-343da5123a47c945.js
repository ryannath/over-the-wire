(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[989],{78922:function(e,n,r){(window.__NEXT_P=window.__NEXT_P||[]).push(["/natas/natas14",function(){return r(58583)}])},90654:function(e,n,r){"use strict";var t=r(85893),s=r(23457),i=r.n(s),a=r(5227),o=r(84283);n.Z=function(e){var n=e.children,r=e.language;return(0,t.jsx)("div",{className:i().CodeBlock,children:(0,t.jsx)(a.Z,{language:r,style:o.cL,children:n})})}},87582:function(e,n,r){"use strict";var t=r(85893),s=r(76992),i=r.n(s);n.Z=function(e){var n=e.children;return(0,t.jsxs)("div",{className:i().keyword,children:[(0,t.jsx)("p",{className:i().keywordHead,children:"Keywords: "}),n]})}},69242:function(e,n,r){"use strict";var t=r(85893),s=r(41664),i=r(98574),a=r.n(i);n.Z=function(e){var n=e.link1,r=e.link2;return(0,t.jsxs)("div",{className:a().pageNav,children:[(0,t.jsx)("div",{children:n?(0,t.jsx)(s.default,{href:n,children:(0,t.jsx)("a",{title:"Previous page",className:a().navButton,children:"\u25c0"})}):""}),(0,t.jsx)("div",{children:r?(0,t.jsx)(s.default,{href:r,children:(0,t.jsx)("a",{title:"Next page",className:a().navButton,children:"\u25b6"})}):""})]})}},20586:function(e,n,r){"use strict";var t=r(85893),s=r(86655),i=r.n(s),a=r(5227),o=r(84283),l=r(67294);n.Z=function(e){var n=e.children,r=(0,l.useState)(!1),s=r[0],c=r[1];return(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Key"}),(0,t.jsxs)("div",{className:i().codeBlock,children:[(0,t.jsx)("div",{className:i().spoilerToggler,children:(0,t.jsx)("button",{onClick:function(){return c(!s)},children:"Click to Reveal"})}),(0,t.jsx)("div",{className:i().spoilerContainer,children:(0,t.jsx)("div",{className:"".concat(i().spoiler," ").concat(s?i().show:""),children:(0,t.jsx)(a.Z,{language:"",style:o.cL,customStyle:{margin:0},children:n})})})]})]})}},35934:function(e,n,r){"use strict";var t=r(85893),s=r(96979),i=r.n(s);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){if(null==e)return{};var r,t,s=function(e,n){if(null==e)return{};var r,t,s={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(s[r]=e[r]);return s}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}n.Z=function(e){var n=e.children,r=o(e,["children"]);return(0,t.jsx)("span",function(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{},t=Object.keys(r);"function"===typeof Object.getOwnPropertySymbols&&(t=t.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),t.forEach((function(n){a(e,n,r[n])}))}return e}({className:i().tag},r,{children:n}))}},58583:function(e,n,r){"use strict";r.r(n);var t=r(85893),s=r(90654),i=r(87582),a=r(69242),o=r(20586),l=r(35934);n.default=function(){return(0,t.jsxs)("div",{children:[(0,t.jsx)("h1",{children:"Natas 14"}),(0,t.jsx)(i.Z,{children:(0,t.jsx)(l.Z,{children:"sqli"})}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Experience"}),(0,t.jsx)("p",{children:"In this level, we are supposed to type in a username and a password, which if correct would return the key for the next level. The code as to how this is done can be seen below."}),(0,t.jsx)(s.Z,{language:"php",children:'$query = "SELECT * from users where username=\\"".$_REQUEST["username"]."\\" and password=\\"".$_REQUEST["password"]."\\"";\nif(array_key_exists("debug", $_GET)) {\necho "Executing query: $query<br>";\n}\n\nif(mysql_num_rows(mysql_query($query, $link)) > 0) {\n  echo "Successful login! The password for natas15 is <censored><br>";\n} else {\n  echo "Access denied!<br>";\n}'}),(0,t.jsx)("p",{children:"It puts the user inputs and insert them to a string to be used as an sql query. Now the query itself can be quite confusing to read, so first, I would convert it to a more readable format."}),(0,t.jsx)(s.Z,{language:"sql",children:'SELECT * from users where username="USERNAME" and password="PASSWORD"'}),(0,t.jsxs)("p",{children:["The string USERNAME and PASSWORD would be where our inputs would actually go. From here, it is a lot clearer that if we want to write a statement that always succeed, we could do so by typing ",(0,t.jsx)("code",{children:'" OR 1 #'}),". The first double quote ends the username query, then we insert the OR keyword and use the truthy 1, then we simply comment out the rest, that is the ",(0,t.jsx)("code",{children:'" and password="PASSWORD"'}),"."]})]}),(0,t.jsxs)("section",{children:[(0,t.jsx)("h2",{children:"Reflection"}),(0,t.jsx)("p",{children:"This was quite an easy SQL injection example, and we essentially escaped the location where we were supposed to insert the username by inserting a double quote, allowing us to then write any arbitrary command afterwards. This is another example of having to be careful when asking for user inputs that will be a part of an executed command. Without all the background knowledge of SQL injection, this type of inserting input would actually seem quite familiar."})]}),(0,t.jsx)(o.Z,{children:"AwWj0w5cvxrZiONgZ9J5stNVkmxdk39J"}),(0,t.jsx)(a.Z,{link1:"/natas/natas13",link2:"/natas/natas15"})]})}},23457:function(e){e.exports={CodeBlock:"CodeBlock_CodeBlock___IBBd"}},76992:function(e){e.exports={keywordHead:"Keyword_keywordHead__40fuD",keyword:"Keyword_keyword__javqt"}},98574:function(e){e.exports={pageNav:"PageNav_pageNav__NXqbT",navButton:"PageNav_navButton__yHhmO"}},86655:function(e){e.exports={codeBlock:"SpoilerKey_codeBlock__KWl0d",spoilerToggler:"SpoilerKey_spoilerToggler__HCeWZ",spoiler:"SpoilerKey_spoiler__YWx_s",show:"SpoilerKey_show__VIJ75",spoilerContainer:"SpoilerKey_spoilerContainer__O76It"}},96979:function(e){e.exports={tag:"Tag_tag__AJnTY"}}},function(e){e.O(0,[369,774,888,179],(function(){return n=78922,e(e.s=n);var n}));var n=e.O();_N_E=n}]);